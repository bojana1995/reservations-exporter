package com.reservation.model;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.persistence.Column;
import jakarta.persistence.Id;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Represents a reservation in the system.
 * This class uses JPA annotations to map the object to a database table.
 *
 * @author Bojana Samardzic
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "reservation")
public class Reservation {

    /**
     * Unique identifier for the reservation.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The date and time when the reservation was created.
     * Cannot be null.
     */
    @Column(name = "timestamp", nullable = false)
    private LocalDateTime timestamp;

    /**
     * Unique identifier for the asset associated with the reservation.
     * Cannot be null.
     */
    @Column(name = "asset_id", nullable = false)
    private UUID assetId;

    /**
     * Unique identifier for the market associated with the reservation.
     * Cannot be null.
     */
    @Column(name = "market_id", nullable = false)
    private UUID marketId;

    /**
     * Unique identifier for the positive bid, if applicable.
     */
    @Column(name = "positive_bid_id")
    private UUID positiveBidId;

    /**
     * Unique identifier for the negative bid, if applicable.
     */
    @Column(name = "negative_bid_id")
    private UUID negativeBidId;

    /**
     * Value of the positive bid in kW.
     */
    @Column(name = "positive_value")
    private double positiveValue;

    /**
     * Positive capacity price in EUR/MW/h.
     */
    @Column(name = "positive_capacity_price")
    private double positiveCapacityPrice;

    /**
     * Positive energy price in EUR/MW/h.
     */
    @Column(name = "positive_energy_price")
    private double positiveEnergyPrice;

    /**
     * Value of the negative bid in kW.
     */
    @Column(name = "negative_value")
    private double negativeValue;

    /**
     * Negative capacity price in EUR/MW/h.
     */
    @Column(name = "negative_capacity_price")
    private double negativeCapacityPrice;

    /**
     * Negative energy price in EUR/MW/h.
     */
    @Column(name = "negative_energy_price")
    private double negativeEnergyPrice;

    /**
     * Date time of updated interval.
     * Cannot be null.
     */
    @Column(name = "updated_at", nullable = false)
    private LocalDateTime updatedAt;
}
